import socket
import sys

target = input("Your target IPv4 address:\n")
ports_start = input("Start port:\n")
ports_end = input("End Port:\n")

service_patterns = {
    "SSH":["SSH","OpenSSH"],
    "HTTP": ["HTTP","Apache","nginx"],
    "FTP":["FTP","vsftpd","FileZilla"],
    "HIKVISION":["Hikvision"],
    "RTSP": ["RTSP", "rtsp"],
    "ONVIF": ["Onvif", "ONVIF"]
}
def detect_service(banner):
    for service, patterns in service_patterns.items():
        for pattern in patterns:
            if pattern in banner:
                return service
    return "UNKNOWN"
def port_scan(target,ports_start, ports_end):
    open_ports = []
    for port in range(int(ports_start), int(ports_end) + 1):
        try:
            sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
            sock.settimeout(0.2)
            result = sock.connect_ex((target,port))
            if result ==0:
                print(f"Port {port} is open!")
                open_ports.append(port)
                banner = sock.recv(1024).decode("utf-8").strip()
                try:
                    print(f"Banner for port {port}: {banner}")
                    service = detect_service(banner)
                    print(f"service for port {port}:{service}")
                except socket.error:
                    pass
                finally:
                    sock.close()
        except KeyboardInterrupt:
            print("Exiting...")
            sys.exit()
        except socket.gaierror:
            print("Host could not be resolved.")
            sys.exit()
        except socket.error:
            print(f"Couldn't connect to port {port}")
            continue

start = port_scan(target, ports_start, ports_end)